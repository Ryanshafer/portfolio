---
// src/pages/case-studies/[slug].astro
import { getEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ImageWithStyle from '../../components/case-studies/ImageWithStyle.astro';
import CaseStudySummary from '../../components/case-studies/CaseStudySummary.astro';
import PostPreview from '../../components/case-studies/PostPreview.astro';
import ReadTime from '../../components/layout/ReadTime.astro';
import Button from '../../components/layout/Button.astro';

export async function getStaticPaths() {
  const { getCollection } = await import('astro:content');
  const posts = await getCollection('studies');
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;
const post = await getEntry('studies', slug);
if (!post) {
  throw new Error(`No post found for slug: ${slug}`);
}

const { data, render } = post;
const { Content } = await render();
const isDarkHeroHeading = Boolean(data.darkHeroHeading);
const textureBlendMode = data.heroTextureBlendMode ?? 'color-burn';
// --- Build-time random selection with at least one related by category ---
function shuffle<T>(arr: T[]): T[] {
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

const allStudies = await getCollection('studies');
const otherStudies = allStudies.filter((p) => p.slug !== slug);

// Collect current post categories (if any)
const currentCats = new Set<string>(Array.isArray(data.categories) ? data.categories : []);

const related = otherStudies.filter((p) => {
  const cats = Array.isArray(p.data?.categories) ? p.data.categories : [];
  return cats.some((c: string) => currentCats.has(c));
});
const unrelated = otherStudies.filter((p) => !related.includes(p));

shuffle(related);
shuffle(unrelated);

let featuredStudies = [] as typeof otherStudies;
if (related.length > 0) {
  featuredStudies.push(related[0]); // ensure at least one related
}
// Fill remaining slots from the rest (related leftovers first, then unrelated)
for (const list of [related.slice(1), unrelated]) {
  for (const item of list) {
    if (featuredStudies.length >= 3) break;
    featuredStudies.push(item);
  }
  if (featuredStudies.length >= 3) break;
}
// Fallback if we still don't have 3 (e.g., very small dataset)
if (featuredStudies.length < 3) {
  featuredStudies = otherStudies.slice(0, Math.min(3, otherStudies.length));
}
---

<Layout
  description={`${data.seo?.description ?? data.description}`}
  title={`${data.title} Case Study | Ryan Shafer, UX Design Leader`}
  bgFill={data.bgFill}
  bgFillDark={data.bgFillDark}
  forceDarkTheme={isDarkHeroHeading}
  >
  <article>
    <!-- Hero Section -->
    <section
      data-section="hero [slug].astro"
      class={`page-header relative overflow-hidden w-full mb-4 xl:mb-16 ${data.bgFill ? '[background-color:var(--hero-bg)] dark:[background-color:var(--hero-bg-dark)]' : 'bg-herowhite dark:bg-herodark'}`}
      style={data.bgFill ? `--hero-bg: ${data.bgFill}; --hero-bg-dark: ${data.bgFillDark ?? data.bgFill};` : undefined}
    >
      <div class="page-header__texture" aria-hidden="true" style={`mix-blend-mode: ${textureBlendMode};`}></div>
      <div class="relative z-10">
        <div class="grid grid-cols-1 xl:grid-cols-12 gap-6 xl:gap-6 items-center max-w-7xl mx-auto px-4 xl:px-8 py-4 xl:py-0">
          <div class="xl:col-span-7">
            <img
              src={data.heroImagePromo}
              alt={data.title}
              class="w-full aspect-video object-cover"
              loading="eager"
              decoding="async"
            />
          </div>
          <div class="xl:col-span-5 xl:ml-8 my-0 lg:my-7">
            <ReadTime
              minutes={data.readTime}
              wrapperClass="justify-left mb-2"
              iconClass={isDarkHeroHeading ? 'h-5 w-5 text-white/70' : 'h-5 w-5 text-black/50'}
              textClass={isDarkHeroHeading ? 'text-base text-white/80' : 'text-base text-black/50'}
              textTag="span"
            />
            <h1
              class={`${isDarkHeroHeading ? 'text-white' : 'text-black'} font-heading font-black text-2xl-custom md:text-5xl xl:text-4xl-custom`}
            >
              {data.title}
            </h1>
          </div>
        </div>
      </div>
    </section>

    <!-- Case Study Summary Section -->
    <div
      data-section="case-study-summary [slug].astro"
      class="mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-6 lg:max-w-7xl lg:px-8"
    >
      {data.summary && (
        <CaseStudySummary
          role={data.summary.role}
          problem={data.summary.problem}
          insight={data.summary.insight}
          approach={data.summary.approach}
          impact={data.summary.impact}
          categories={data.categories}
          stats={data.summary.stats}
        />
      )}
    </div>

    <!-- Case Study Content Section -->
    <div
      data-section="case-study-content [slug].astro"
      class="mx-auto max-w-2xl px-4 mt-4 mb-24 sm:px-6 lg:max-w-7xl lg:px-8"
    >
      <div class="prose prose-case-study mt-4 max-w-none text-black dark:text-white">
        <Content components={{ ImageWithStyle, Button }} />
      </div>
    </div>
  </article>

  <!-- More Case Studies Section -->
  <section
    data-section="more-case-studies [slug].astro"
    class="mx-auto max-w-2xl px-0 sm:px-6 lg:max-w-7xl lg:px-8"
  >
    <div class="grid grid-cols-1 gap-x-6 gap-y-6 p-6 md:p-10 pt-6 lg:grid-cols-12 bg-herowhite dark:bg-herodark/40 rounded-lg">
      <!-- 3 column layout for smaller promos -->
      <h3
        data-section="more-case-studies-heading [slug].astro"
        class="col-span-full font-heading text-4xl font-bold text-black dark:text-white"
      >
        More Case Studies
      </h3>
      {featuredStudies[0] && (
        <div class="col-span-full lg:col-span-6 col-start-1 mb-6 md:mb-0" >
          <PostPreview post={featuredStudies[0]} />
        </div>
      )}

      {featuredStudies[1] && (
        <div class="col-span-full lg:col-span-6 lg:col-start-7">
          <PostPreview post={featuredStudies[1]} />
        </div>
      )}
    </div>
  </section>
</Layout>
