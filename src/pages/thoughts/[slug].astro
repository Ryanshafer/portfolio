---
// src/pages/thoughts/[slug].astro
import { getEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ImageWithStyle from '../../components/case-studies/ImageWithStyle.astro';
import CategoryPills from '../../components/layout/CategoryPills.astro';
import ReadTime from '../../components/layout/ReadTime.astro';

export async function getStaticPaths() {
  const { getCollection } = await import('astro:content');
  const posts = await getCollection('thoughts');
  return posts.map((post) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;
const post = await getEntry('thoughts', slug);
if (!post) {
  throw new Error(`No post found for slug: ${slug}`);
}

const { data, render } = post;
const { Content } = await render();

// // --- Build-time random selection with at least one related by category ---
// function shuffle<T>(arr: T[]): T[] {
//   for (let i = arr.length - 1; i > 0; i--) {
//     const j = Math.floor(Math.random() * (i + 1));
//     [arr[i], arr[j]] = [arr[j], arr[i]];
//   }
//   return arr;
// }

// const allStudies = await getCollection('studies');
// const otherStudies = allStudies.filter((p) => p.slug !== slug);

// // Collect current post categories (if any)
// const currentCats = new Set<string>(Array.isArray(data.categories) ? data.categories : []);

// const related = otherStudies.filter((p) => {
//   const cats = Array.isArray(p.data?.categories) ? p.data.categories : [];
//   return cats.some((c: string) => currentCats.has(c));
// });
// const unrelated = otherStudies.filter((p) => !related.includes(p));

// shuffle(related);
// shuffle(unrelated);

// let featuredStudies = [] as typeof otherStudies;
// if (related.length > 0) {
//   featuredStudies.push(related[0]); // ensure at least one related
// }
// // Fill remaining slots from the rest (related leftovers first, then unrelated)
// for (const list of [related.slice(1), unrelated]) {
//   for (const item of list) {
//     if (featuredStudies.length >= 3) break;
//     featuredStudies.push(item);
//   }
//   if (featuredStudies.length >= 3) break;
// }
// // Fallback if we still don't have 3 (e.g., very small dataset)
// if (featuredStudies.length < 3) {
//   featuredStudies = otherStudies.slice(0, Math.min(3, otherStudies.length));
// }
---

<Layout
  description={`${data.description}`}
  title={`${data.title} | Ryan Shafer, UX Design Leader`}
>
  <article>
    <!-- Hero Section -->
    <section
      data-section="hero [slug].astro"
      class="page-header relative overflow-hidden bg-herowhite dark:bg-herodark"
    >
      <div class="page-header__bg-wrapper" aria-hidden="true">
        <div class="page-header__bg-ellipse">
          <img
            src="/assets/ellipses/ellipse-1.png"
            alt=""
            loading="eager"
            class="page-header__bg-image"
          />
        </div>
      </div>
      <div
        class="relative z-10 mx-auto flex max-w-2xl flex-col items-center gap-y-6 px-4 pb-12 pt-12 text-center sm:px-6 md:pb-8 md:pt-20 lg:px-8"
      >
        <h1
          class="pt-6 font-heading text-[clamp(24px,4.5vw+17.6px,72px)] font-black leading-[clamp(32px,5vw+14px,68px)] text-black md:pt-0"
        >
          {data.title}
        </h1>
        <div class="mt-2">
          {Array.isArray(data.categories) && data.categories.length > 0 && (
            <CategoryPills
              categories={data.categories}
              basePath="/thoughts/category"
              variant="hashtags"
              wrapperTag="ul"
              wrapperClass="flex flex-wrap items-center justify-center gap-x-2 gap-y-3 text-[clamp(16px,1.5vw+10px,22px)] leading-[clamp(22px,2vw+12px,30px)] text-black/50"
            />
          )}
          <ReadTime
            minutes={post.data.readTime}
            wrapperClass="mt-2 justify-center"
            iconClass="h-5 w-5 text-black/50"
            textClass="text-lg text-black/50 md:text-xl"
            textTag="span"
          />
        </div>
      </div>
    </section>

    <!-- Thoughts Content Section -->
    <div
      data-section="thoughts-content [slug].astro"
      class="mx-auto max-w-2xl space-y-6 px-6 py-8 lg:px-8 xl:py-16"
    >
      <div class="thoughts prose prose-thoughts mt-4 mb-8 text-black dark:text-white">
        <Content components={{ ImageWithStyle }} />
      </div>
    </div>
  </article>

  <!-- More Case Studies Section -->
  <!-- <section
    data-section="more-case-studies [slug].astro"
    class="mx-auto max-w-2xl px-0 sm:px-6 lg:max-w-7xl lg:px-8"
  >
    <div class="grid grid-cols-1 gap-x-6 gap-y-6 p-6 md:p-10 pt-6 lg:grid-cols-12 bg-darkwhite/40"> -->
  <!-- 3 column layout for smaller promos -->
  <!-- <h3
        data-section="more-case-studies-heading [slug].astro"
        class="col-span-full font-heading text-4xl font-bold text-black dark:text-white"
      >
        More Case Studies
      </h3>
      {featuredStudies[0] && (
        <div class="col-span-full lg:col-span-4 col-start-1 mb-6 md:mb-0" >
          <PostPreview post={featuredStudies[0]} />
        </div>
      )}

      {featuredStudies[1] && (
        <div class="col-span-full lg:col-span-4 lg:col-start-5">
          <PostPreview post={featuredStudies[1]} />
        </div>
      )}

      {featuredStudies[2] && (
        <div class="col-span-full lg:col-span-4 lg:col-start-9">
          <PostPreview post={featuredStudies[2]} />
        </div>
      )}
    </div>
  </section> -->
</Layout>
