---
export interface Props {
  minutes?: number | string;
  variant?: 'long' | 'short';
  approx?: boolean;
  label?: string;
  wrapperClass?: string;
  textClass?: string;
  iconClass?: string;
  textTag?: 'p' | 'span';
}

const {
  minutes,
  variant = 'long',
  approx = true,
  label,
  wrapperClass,
  textClass,
  iconClass,
  textTag = 'p',
} = Astro.props as Props;

const resolvedWrapperClass = ['flex items-center gap-1', wrapperClass].filter(Boolean).join(' ');
const resolvedTextClass = textClass ?? 'text-sm';
const resolvedIconClass = iconClass ?? 'h-4 w-4 text-black dark:text-white';

const minutesDisplay = typeof minutes === 'number' ? minutes : minutes ?? '';
const approxPrefix = approx ? 'About ' : '';
const article = approx ? 'a ' : '';
const pluralLabel = variant === 'short' ? 'min read' : 'minute read';
const computedLabel = `${approxPrefix}${article}${minutesDisplay} ${pluralLabel}`.trim();
const displayLabel = label ?? computedLabel;
const TextTag = textTag;
---

<div class={resolvedWrapperClass}>
  <svg
    width="16"
    height="16"
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    class={resolvedIconClass}
    aria-hidden="true"
  >
    <g clip-path="url(#clip0)">
      <path
        d="M8 14.667A6.667 6.667 0 1 1 8 1.333a6.667 6.667 0 0 1 0 13.334Zm0-1.334A5.333 5.333 0 1 0 8 2.667a5.333 5.333 0 0 0 0 10.666ZM8.667 8H11.333V9.333H7.333V4.667h1.334V8Z"
        class="fill-current"
      />
    </g>
    <defs>
      <clipPath id="clip0">
        <rect width="16" height="16" fill="white" />
      </clipPath>
    </defs>
  </svg>
  <TextTag class={resolvedTextClass}>{displayLabel}</TextTag>
</div>
